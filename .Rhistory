foo <- list()
textSize <- 0
vec <- vector()
mat <- matrix(nrow = 1, ncol = 10)
if (is_con_open == "DONE") {
while(T) {
while (Sys.time() < stopTime) {
if (Sys.time() < stopTime) {
newText <- read.serialConnection(ser)
if(0 < nchar(newText))
{
foo <- c(foo, paste(newText, Sys.time()))
}
}
if (Sys.time() >= stopTime) {
cat("Начато сохранение данных. Не прерывайте работу программы!")
for (i in c(1:length(foo))) {
vec <- c(vec, as.vector(foo[[i]]))
vecSplitted <- splitter(vec)[[1]]
mat <- rbind(mat, vecSplitted)
}
dataframed_output <- data.frame(mat)
saver(dataframed_output, stopTime, path)
stopTime = Sys.time() + stopTime_interval
cat(paste("Сохранение в ", Sys.time(), "прошло успешно"))
foo <- list()
mat <- matrix(nrow = 1, ncol = 10)
vec <- vector()
break
}
}
}} else cat("Ошибка: COM-порт недоступен (код ошибки: 1)")
close(ser)
is_con_open <- open(ser)
stopTime_interval <- 60
newText <- ""
stopTime <- Sys.time() + stopTime_interval
foo <- list()
textSize <- 0
vec <- vector()
mat <- matrix(nrow = 1, ncol = 10)
if (is_con_open == "DONE") {
while(T) {
while (Sys.time() < stopTime) {
if (Sys.time() < stopTime) {
newText <- read.serialConnection(ser)
if(0 < nchar(newText))
{
foo <- c(foo, paste(newText, Sys.time()))
}
}
if (Sys.time() >= stopTime) {
cat("Начато сохранение данных. Не прерывайте работу программы!")
for (i in c(1:length(foo))) {
vec <- c(vec, as.vector(foo[[i]]))
vecSplitted <- splitter(vec)[[1]]
mat <- rbind(mat, vecSplitted)
}
dataframed_output <- data.frame(mat)
saver(dataframed_output, stopTime, path)
stopTime = Sys.time() + stopTime_interval
cat(paste("Сохранение в ", Sys.time(), "прошло успешно"))
foo <- list()
mat <- matrix(nrow = 1, ncol = 10)
vec <- vector()
break
}
}
}} else cat("Ошибка: COM-порт недоступен (код ошибки: 1)")
read.csv("C:\\sba\\data_exchange_new\\output_for_2023-09-28 15 28 48.csv")
t2 <- read.csv("C:\\sba\\data_exchange_new\\output_for_2023-09-28 15 28 48.csv")
View(t2)
t2 <- read.csv2("C:\\sba\\data_exchange_new\\output_for_2023-09-28 15 28 48.csv")
View(t2)
version()
version(
version
install.packages("RTools")
install.packages("devtools")
install.packages("roxygen2")
install.packages("testthat")
install.packages("covr")
install.packages("lintr")
devtools::create(""C:/sba-5 auto project"")
devtools::create("C:/sba-5 auto project")
devtools::create("C:/sba-5 auto project/")
devtools::create(""C:/sba_5_auto"")
devtools::create("C:/sba_5_auto")
?devtools::create()
devtools::create("C:\projects\sba")
devtools::create("C:/projects/sba")
setwd("C:/projects/sba")
devtools::use_testthat()
?devtools::use_testthat()
usethis::use_testthat()
?version()
serial.version()
version(serial)
packageVersion(serial)
packageVersion("serial")
packageVersion("stringi")
packageVersion("tidyverse")
install.packages("R6")
install.packages("R6")
packageVersion("R6")
library(R6)
sba <- R6Class(classname = "SBA",
public = list(
name = "Gel",
port = "COM3",
mode = "19200,n,8,1",
buffering = "line",
connection = serialConnection(port = self$port,
mode = self$mode,
buffering = self$buffering)
)
)
library(serial)
sba <- R6Class(classname = "SBA",
public = list(
name = "Gel",
port = "COM3",
mode = "19200,n,8,1",
buffering = "line",
connection = serialConnection(port = self$port,
mode = self$mode,
buffering = self$buffering)
)
)
sba <- R6Class(classname = "SBA",
public = list(
name = "Gel",
port = "COM3",
mode = "19200,n,8,1",
buffering = "line",
setConnection = function(port = NULL, mode = NULL, buffering = NULL){
connection <- serialConnection(port = self$port,
mode = self$mode,
buffering = self$buffering)
return(connection)
}
)
)
View(sba)
sba
sba <- R6Class(classname = "SBA",
public = list(
port = "COM3",
mode = "19200,n,8,1",
buffering = "line",
setConnection = function(port = NULL, mode = NULL, buffering = NULL){
connection <- serialConnection(port = self$port,
mode = self$mode,
buffering = self$buffering)
return(connection)
},
initialize = function(port, mode, buffering) {
self$port <- port
self$mode   <- mode
self$buffering <- buffering
}
)
)
rm(sba)
tech <- R6Class(classname = "tech",
public = list(
port = "COM3",
mode = "19200,n,8,1",
buffering = "line",
setConnection = function(port = NULL, mode = NULL, buffering = NULL){
connection <- serialConnection(port = self$port,
mode = self$mode,
buffering = self$buffering)
return(connection)
},
initialize = function(port, mode, buffering) {
self$port <- port
self$mode   <- mode
self$buffering <- buffering
}
)
)
setwd(path)
View(mat)
library(DBI)
library(RPostgreSQL)
con <- dbConnect(PostgreSQL(),
host     = 'localhost',
user     = 'postgres',
password = 'postgres',
dbname   = "test1",
host     = "localhost")
con_db <- dbConnect(PostgreSQL(),
host     = 'localhost',
user     = 'postgres',
password = 'postgres',
dbname   = "test1")
con_db <- dbConnect(PostgreSQL(),
host     = 'localhost',
user     = 'rcon',
password = 'rcon',
dbname   = "test1")
drv <- dbDriver("PostgreSQL")
con_db <- dbConnect(drv,
host     = 'localhost',
user     = 'rcon',
password = 'rcon',
dbname   = "test1")
library(DBI)
library(RPostgreSQL)
drv <- dbDriver("PostgreSQL")
con_db <- dbConnect(drv,
host     = 'localhost',
user     = 'rcon',
password = 'rcon',
dbname   = "test1")
con_db <- dbConnect(drv,
host     = 'localhost',
user     = 'rcon',
password = 'rcon',
dbname   = "test1")
drv <- dbDriver("PostgreSQL")
con_db <- dbConnect(drv,
host     = 'localhost',
user     = 'rcon',
password = 'rcon',
dbname   = "test1")
drv <- dbDriver("PostgreSQL")
con_db <- dbConnect(drv,
host     = 'localhost',
user     = 'rcon',
password = 'rcon',
dbname   = "test1")
library(DBI)
library(RPostgreSQL)
library(DBI)
library(RPostgreSQL)
drv <- dbDriver("PostgreSQL")
con_db <- dbConnect(drv,
host     = 'localhost',
user     = 'rcon',
password = 'rcon',
dbname   = "test1")
con_db <- dbConnect(drv,
host     = 'localhost',
user     = 'rcon',
password = 'rcon',
dbname   = "test1")
con_db <- dbConnect(drv,
host     = 'localhost',
user     = 'rcon',
password = 'rcon',
dbname   = "test2")
odbcListDrivers()
library(odbc)
?odbcListDrivers()
library(RODBC)
con_db <- dbConnect(drv,
host     = 'localhost',
user     = 'postgres',
password = 'postgres',
dbname   = "test1")
con_db <- dbConnect(drv,
host     = 'localhost',
user     = 'rtest1',
password = 'rtest',
dbname   = "test1")
con_db <- dbConnect(drv,
host     = 'localhost',
user     = 'rtest1',
password = 'rtest1',
dbname   = "test1")
install.packages("RPostgreSQL")
con_db <- dbConnect(drv,
host     = 'localhost',
user     = 'postgres',
password = 'postgres',
dbname   = "test1")
library(DBI)
library(RPostgreSQL)
drv <- dbDriver("PostgreSQL")
con_db <- dbConnect(drv,
host     = 'localhost',
user     = 'postgres',
password = 'postgres',
dbname   = "test1")
con_db <- dbConnect(drv,
host     = 'localhost',
user     = 'postgres',
password = 'postgres',
dbname   = "postgres")
con_db <- dbConnect(drv,
host     = 'localhost',
user     = 'rtest',
password = 'rtest',
dbname   = "test1")
con_db <- dbConnect(drv,
host     = 'localhost',
user     = 'rtest',
password = 'rtest',
dbname   = "test1")
con_db <- dbConnect(drv,
host     = 'localhost',
user     = 'rtest',
password = 'rtest',
dbname   = "test1")
con_db <- dbConnect(drv,
host     = 'localhost',
user     = 'rtest',
password = 'rtest',
dbname   = "test1")
con_db <- dbConnect(drv,
host     = 'localhost',
user     = 'Rpost',
password = 'rpost',
dbname   = "test1")
con_db <- dbConnect(drv,
host     = 'localhost',
user     = 'Rpost',
password = 'rpost',
dbname   = "test1")
con_db <- dbConnect(drv,
host     = 'localhost',
user     = '11',
password = '11',
dbname   = "testtesttest")
con_db <- dbConnect(drv,
host     = 'localhost',
user     = '11',
password = '11',
dbname   = "testtesttest")
library(DBI)
con_db <- dbConnect(RPostgreSQL(),
host     = 'localhost',
user     = 'postgres',
password = 'postgres',
dbname   = "postgres")
library(RPostgreSQL)
con_db <- dbConnect(RPostgreSQL(),
host     = 'localhost',
user     = 'postgres',
password = 'postgres',
dbname   = "postgres")
con_db <- dbConnect(drv,
host     = 'localhost',
user     = 'postgres',
password = 'postgres',
dbname   = "postgres")
drv <- dbDriver("PostgreSQL")
con_db <- dbConnect(drv,
host     = 'localhost',
user     = 'postgres',
password = 'postgres',
dbname   = "postgres")
library(RPostgreSQL)
library(DBI)
con_db <- dbConnect(RPostgreSQL::PostgreSQL(),
host     = 'localhost',
user     = 'postgres',
password = 'postgres',
dbname   = "postgres")
View(drv)
View(foo)
con_db <- dbConnect(RPostgreSQL::PostgreSQL(),
host     = 'localhost',
user     = 'postgres',
password = 'postgres',
dbname   = "postgres")
tryCatch({
drv <- dbDriver("PostgreSQL")
print("Connecting to Database…")
connec <- dbConnect(drv,
dbname = "rrr",
host = "localhost",
port = "5432",
user = "admin",
password = "xxx")
print("Database Connected!")
},
error=function(cond) {
print("Unable to connect to Database.")
})
connec <- dbConnect(drv,
dbname = "rrr",
host = "localhost",
port = "5432",
user = "admin",
password = "xxx")
update.packages("RPostgreSQL")
install.packages("RPostgreSQL")
install.packages("RPostgreSQL")
install.packages("RPostgreSQL")
library(RPostgreSQL)
drv <- dbDriver("PostgreSQL")
con_db <- dbConnect(RPostgreSQL::PostgreSQL(),
host     = 'localhost',
user     = 'postgres',
password = 'postgres',
dbname   = "postgres")
connec <- dbConnect(drv,
dbname = "rrr",
host = "localhost",
port = "5432",
user = "admin",
password = "xxx")
connec <- dbConnect(drv,
dbname = "tester",
host = "185.41.163.219",
port = "5432",
user = "postgres",
password = "postgres")
library(DBI)
library(RPostgreSQL)
drv <- dbDriver("PostgreSQL")
connec <- dbConnect(drv,
dbname = "tester",
host = "185.41.163.219",
port = "5432",
user = "postgres",
password = "postgres")
connec <- dbConnect(drv,
dbname = "tester",
host = "185.41.163.219",
port = "5432",
user = "tester",
password = "")
connec <- dbConnect(drv,
dbname = "tester",
host = "185.41.163.219",
port = "5432",
user = "tester",
password = "tester")
connec <- dbConnect(drv,
dbname = "tester",
host = "185.41.163.219",
port = "5432",
user = "tester",
password = "tester")
data_to_save <- data.frame()
output <- read.serialConnection(ser)
data_1 <- as.vector(strsplit(x = data, split = " ")[[1]])
# создание подключения и открытие
ser <- serialConnection(port = "COM3", mode = "19200,n,8,1", buffering = 'line')
library(serial)
# создание подключения и открытие
ser <- serialConnection(port = "COM3", mode = "19200,n,8,1", buffering = 'line')
t <- open(ser)
t1 <- as.vector(strsplit(x = foo, split = "\n")[[1]])
t2 <- as.vector(strsplit(x = foo, split = " ")[[1]])
data_test <- data.frame()
newText <- ""
stopTime <- Sys.time() + 15
foo <- ""
textSize <- 0
t <- open(ser)
while(Sys.time() < stopTime) {
newText <- read.serialConnection(ser)
if(0 < nchar(newText))
{
foo <- paste(foo, newText, sep = '\n')
}
}
close(ser)
t <- open(ser)
newText <- ""
stopTime <- Sys.time() + 15
foo <- ""
textSize <- 0
while(Sys.time() < stopTime) {
newText <- read.serialConnection(ser)
if(0 < nchar(newText))
{
foo <- paste(foo, newText, sep = '\n')
}
}
# создание подключения и открытие , buffering = 'line'
ser <- serialConnection(port = "COM3", mode = "19200,n,8,1")
t <- open(ser)
close(ser)
# создание подключения и открытие , buffering = 'line'
ser <- serialConnection(port = "COM3", mode = "19200,n,8,1")
t <- open(ser)
newText <- ""
stopTime <- Sys.time() + 15
foo <- ""
textSize <- 0
t <- open(ser)
while(Sys.time() < stopTime) {
newText <- read.serialConnection(ser)
if(0 < nchar(newText))
{
foo <- paste(foo, newText, sep = '\n')
}
}
library(DBI)
library(RPostgreSQL)
drv <- dbDriver("PostgreSQL")
con_db <- dbConnect(drv = drv,
host     = '81.31.246.77',
user     = 'gen_user',
password = '0,%Bhaq!TLz=Aa',
dbname   = "default_db")
con_db <- dbConnect(drv = drv,
host     = '81.31.246.77',
user     = 'gen_user',
password = '0,%Bhaq!TLz=Aa',
dbname   = "default_db")
con_db <- dbConnect(drv = drv,
host     = '81.31.246.77',
user     = 'gen_user',
password = '0,%Bhaq!TLz=Aa',
dbname   = "default_db")
